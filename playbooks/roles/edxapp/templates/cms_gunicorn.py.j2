"""
gunicorn configuration file: http://docs.gunicorn.org/en/stable/configure.html

{{ ansible_managed }}
"""
import multiprocessing

preload_app = False
timeout = {{ EDXAPP_CMS_GUNICORN_TIMEOUT }}
bind = "{{ edxapp_cms_gunicorn_host }}:{{ edxapp_cms_gunicorn_port }}"
pythonpath = "{{ edxapp_code_dir }}"

{% if EDXAPP_CMS_MAX_REQ %}
max_requests = {{ EDXAPP_CMS_MAX_REQ }}
{% elif EDXAPP_CMS_MAX_REQUEST_JITTER %}
max_requests_jitter = {{ EDXAPP_CMS_MAX_REQUEST_JITTER }}
{% endif %}

{% if EDXAPP_WORKERS %}
workers = {{ EDXAPP_WORKERS.cms }}
{% else %}
workers = multiprocessing.cpu_count() * {{ worker_core_mult.cms }}
{% endif %}
{% if EDXAPP_WORKER_THREADS %}
threads = {{ EDXAPP_WORKER_THREADS.cms }}
{% endif %}
{% if EDXAPP_WORKER_CLASS %}
worker_class = {{ EDXAPP_WORKER_CLASS }}
{% endif %}

{{ common_pre_request }}

{{ common_close_all_caches }}

def post_fork(server, worker):
    close_all_caches()

{{ EDXAPP_CMS_GUNICORN_EXTRA_CONF }}
